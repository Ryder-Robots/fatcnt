#ifndef STATEMANAGERIFACE_HPP
#define STATEMANAGERIFACE_HPP

#include <stdint.h>
#include <vector>
#include <fatcnt/events/eventhandler.hpp>
#include <fatcnt/protocols/rrp/rrpstatus.hpp>
#include <fatcnt/state/statemanageriface.hpp>

using namespace std;

namespace rrobot {
/*
 */
class StateManagerIface {
   public:

    /**
     * @fn getMode
     * @brief
     * returns the current mode.
     */
    virtual RR_CMODES getMode() = 0;

    /**
     * @fn getStatus
     * @brief
     * Returns the global status.
     */
    virtual RRP_STATUS getStatus() = 0;

    /**
     * @fn addHandler
     * @brief
     * adds handler to handler vector
     */
    virtual void addHandler(EventHandler* handler) = 0;

    /**
     * @fn getHandlers
     * @brief
     * returns the list of handlers.
     */
    virtual vector<EventHandler*> getHandlers() = 0;

    /**
     * @fn setMode
     * @brief
     * sets current mode.
     */
    virtual void setMode(RR_CMODES mode) = 0;

    /**
     * @fn getState
     * @brief
     * returns state variable.
     */
    virtual StateIface* getState() = 0;

    /**
     * @fn getEnv
     * @brief
     * returns environment.
     */
    virtual Environment* getEnv() = 0;
};
}  // namespace rrobot

#endif  // STATEMANAGERIFACE_HPP
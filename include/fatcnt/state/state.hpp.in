#ifndef STATE_HPP
#define STATE_HPP

#include <mutex>
#include <fatcnt/state/rrqueues.hpp>

namespace rrobot {
    class State {
        public:
            State(RrQueues* queues):
                _queues(queues) {}
             
            RrQueues* getQueues() {return _queues;}

            bool isRunning() {
                return _is_running;
            }

            void setIsRunning(bool isrunning) {
                _lock.lock();
                _is_running = isrunning;
                _lock.unlock();
            }

            bool isAuthenticated() {
                return _is_authenticated;
            }

            void setIsAuthenticated(bool isauthenticated) {
                _lock.lock();
                _is_authenticated = isauthenticated;
                _lock.unlock();
            }

        private:
            RrQueues* _queues;
            bool   _is_running = true;
            bool   _is_authenticated = false;
            mutex  _lock;
    };
}

#endif // STATE_HPP